<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<bean id="bcryptPasswordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
	<bean id="customUserService"
		class="kh.spring.daesinsa.member.security.CustomUserDetailsService" />
	<bean id="customLoginSuccess"
		class="kh.spring.daesinsa.member.security.CustomLoginSuccessHandler" />
	<bean id="customAccessDenied"
		class="kh.spring.daesinsa.member.security.CustomAccessDeniedHandler" />


	<!-- resources 폴더 안은 security X -->
	<security:http pattern="/resources/**" security="none"></security:http>


	<!-- 접근 권한 설정 -->
	<security:http>
	<!-- use-expressions="true"
		authentication-manager-ref="authenticationManager" -->
		<security:intercept-url pattern="/"
			access="permitAll" />
		<security:intercept-url pattern="/mypage/**"
			access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url
			pattern="/shopbasket/**" access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/rent/**"
			access="hasRole('ROLE_MEMBER')" />
		<security:intercept-url pattern="/admin/**"
			access="hasRole('ROLE_ADMIN')" />
		<security:form-login login-page="/member/login"
			login-processing-url="/member/login" default-target-url="/main"
			authentication-success-handler-ref="customLoginSuccess" />
		<security:access-denied-handler
			ref="customAccessDenied" />
	</security:http>


	<!-- 최대 한 개의 세션만 생성되도록 <security:session-management invalid-session-url="/member/login"> 
		<security:concurrency-control max-sessions="1" expired-url="/member/login" 
		error-if-maximum-exceeded="true" /> </security:session-management> -->

	<!-- 로그아웃 처리 <security:logout delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE" 
		logout-success-url="/member/logout" logout-url="/member/logout" invalidate-session="true" 
		/ -->



	<!-- 암호화 안 된 로그인 정보 -->
	<security:authentication-manager>
		<security:authentication-provider>
			<security:user-service>
				<security:user name="test" password="{noop}test"
					authorities="ROLE_MEMBER" />
				<security:user name="admin" password="{noop}admin"
					authorities="ROLE_ADMIN" />
			</security:user-service>
		</security:authentication-provider>
	</security:authentication-manager>


	<!-- <security:authentication-manager> <security:authentication-provider> 
		<security:password-encoder hash="bcrypt" /> <security:jdbc-user-service data-source-ref="dataSource" 
		users-by-username-query="SELECT M_ID, M_PWD, ENABLED FROM MEMBER WHERE M_ID=?" 
		authorities-by-username-query="SELECT M_ID, M_PWD, AUTH as authority FROM 
		MEMBER WHERE M_ID=?" /> </security:authentication-provider> </security:authentication-manager> -->
</beans>